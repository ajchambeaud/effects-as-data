{"version":3,"sources":["../../src/helpers/end-with-payload-if-truthy.js"],"names":[],"mappings":";;eAAmC,OAAO,CAAC,YAAY,CAAC;;IAAhD,UAAU,YAAV,UAAU;IAAE,KAAK,YAAL,KAAK;IAAE,GAAG,YAAH,GAAG;;AAE9B,SAAS,sBAAsB,CAAE,GAAG,EAAuB;MAArB,YAAY,uEAAG,IAAI;;AACvD,SAAO,gBAA6B;QAAlB,OAAO,QAAP,OAAO;QAAE,MAAM,QAAN,MAAM;;AAC/B,QAAI,KAAK,GAAG,MAAM,CAAC,GAAG,CAAC,CAAA;AACvB,QAAI,YAAY,IAAI,KAAK,EAAE;AACzB,aAAO,KAAK,CAAC,KAAK,CAAC,CAAA;KACpB,MAAM,IAAI,KAAK,EAAE;;AAEhB,aAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAA;KACrB;;AAED,QAAI,OAAO,CAAC,GAAG,CAAC,EAAE;AAChB,aAAO,CAAC,UAAU,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,CAAA;KACzC;GACF,CAAA;CACF;;AAED,MAAM,CAAC,OAAO,GAAG;AACf,wBAAsB,EAAtB,sBAAsB;CACvB,CAAA","file":"end-with-payload-if-truthy.js","sourcesContent":["const { setPayload, panic, end } = require('../actions')\n\nfunction endWithPayloadIfTruthy (key, panicOnError = true) {\n  return function ({context, errors}) {\n    let error = errors[key]\n    if (panicOnError && error) {\n      return panic(error)\n    } else if (error) {\n      //  log error using action\n      console.error(error)\n    }\n\n    if (context[key]) {\n      return [setPayload(context[key]), end()]\n    }\n  }\n}\n\nmodule.exports = {\n  endWithPayloadIfTruthy\n}\n"]}