{"version":3,"sources":["../src/effects-as-data.js"],"names":[],"mappings":";;;;eAAiD,OAAO,CAAC,OAAO,CAAC;;IAAzD,GAAG,YAAH,GAAG;IAAE,KAAK,YAAL,KAAK;IAAE,OAAO,YAAP,OAAO;IAAE,MAAM,YAAN,MAAM;IAAE,OAAO,YAAP,OAAO;;gBACN,OAAO,CAAC,QAAQ,CAAC;;IAA/C,OAAO,aAAP,OAAO;IAAE,SAAS,aAAT,SAAS;IAAE,KAAK,aAAL,KAAK;;gBACR,OAAO,CAAC,iBAAiB,CAAC;;IAA3C,YAAY,aAAZ,YAAY;;gBACkB,OAAO,CAAC,WAAW,CAAC;;IAAlD,YAAY,aAAZ,YAAY;IAAE,WAAW,aAAX,WAAW;;AAEjC,IAAM,GAAG,GAAG,SAAN,GAAG,CAAI,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,QAAQ,EAAK;AACjD,MAAI,EAAE,GAAG,mBAAmB,CAAC,QAAQ,CAAC,CAAA;AACtC,MAAM,UAAU,GAAG,KAAK,CAAC,cAAc,EAAE,OAAO,CAAC,CAAA;AACjD,SAAO,YAAY,CAAC,UAAU,EAAE,OAAO,EAAE,KAAK,EAAE,EAAE,CAAC,CAAA;CACpD,CAAA;;AAED,IAAM,YAAY,GAAG,SAAf,YAAY,CAAI,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE,EAAK;AACjD,MAAI,MAAM,GAAG,cAAc,CAAC,KAAK,CAAC,CAAA;AAClC,MAAI,KAAK,GAAG,aAAa,CAAC,IAAI,CAAC,CAAA;;AAE/B,MAAI,WAAW,CAAC,KAAK,EAAE,EAAE,CAAC,EAAE;AAC1B,WAAO,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAA;GAC/B;;AAED,MAAI,EAAE,GAAG,MAAM,CAAC,KAAK,EAAE,EAAE,CAAC,CAAA;AAC1B,MAAI,MAAM,GAAG,EAAE,CAAC,MAAM,CAAC,CAAA;AACvB,MAAI,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC,CAAA;;AAE7B,SAAO,UAAU,CAAC,OAAO,EAAE,OAAO,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,UAAC,OAAO,EAAK;AACxD,QAAI,MAAM,GAAG,YAAY,CAAC,MAAM,EAAE,OAAO,CAAC,CAAA;AAC1C,QAAI,GAAG,GAAG,gBAAgB,CAAC,EAAE,CAAC,CAAA;AAC9B,QAAI,iBAAiB,GAAG,qBAAqB,CAAC,OAAO,CAAC,CAAA;AACtD,QAAI,GAAG,GAAG,sBAAsB,CAAC,iBAAiB,EAAE,GAAG,CAAC,CAAA;;AAExD,QAAI,GAAG,CAAC,GAAG,EAAE;AACX,aAAO,MAAM,CAAA;KACd;;AAED,WAAO,YAAY,CAAC,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,CAAC,CAAA;GACjD,CAAC,CAAA;CACH,CAAA;;AAED,IAAM,qBAAqB,GAAG,SAAxB,qBAAqB,CAAI,OAAO,EAAK;AACzC,MAAI,sBAAsB,GAAG,CAAC,KAAK,CAAC,CAAA;AACpC,SAAO,OAAO,CAAC,IAAI,CAAC;QAAE,IAAI,QAAJ,IAAI;WAAM,sBAAsB,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;GAAA,CAAC,CAAA;CAC3E,CAAA;;AAED,IAAM,sBAAsB,GAAG,SAAzB,sBAAsB,GAAwB;MAApB,MAAM,uEAAG,EAAE;MAAE,EAAE;;AAC7C,UAAQ,MAAM,CAAC,IAAI;AACjB,SAAK,KAAK;AACR,aAAO,KAAK,CAAC,EAAE,EAAE;AACf,WAAG,EAAE,IAAI;OACV,CAAC,CAAA;;AAAA,AAEJ;AACE,aAAO,EAAE,CAAA;AAAA,GACZ;CACF,CAAA;;AAED,IAAM,mBAAmB,GAAG,SAAtB,mBAAmB,CAAI,MAAM,EAAK;AACtC,SAAO;AACL,SAAK,EAAE,CAAC;AACR,UAAM,EAAN,MAAM;GACP,CAAA;CACF,CAAA;;AAED,IAAM,UAAU,GAAG,SAAb,UAAU,CAAI,OAAO,EAAE,OAAO,EAAE,EAAE,EAAK;AAC3C,MAAI,QAAQ,GAAG,GAAG,CAAC,UAAC,MAAM,EAAK;AAC7B,WAAO,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE,CAAC,CAAA;GACjD,EAAE,OAAO,CAAC,CAAA;AACX,SAAO,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAA;CAC7B,CAAA;;AAED,IAAM,kBAAkB,GAAG,SAArB,kBAAkB,CAAI,OAAO,EAAE,MAAM,EAAK;AAC9C,SAAO,MAAM,CAAA;CACd,CAAA;;AAED,IAAM,iBAAiB,GAAG,SAApB,iBAAiB,CAAI,OAAO,EAAE,MAAM,EAAE,EAAE,EAAK;AACjD,SAAO,GAAG,CAAC,OAAO,EAAE,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,UAAC,KAAK,EAAK;AACjE,WAAO,YAAY,CAAC,KAAK,CAAC,MAAM,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC,CAAA;GACrD,CAAC,CAAA;CACH,CAAA;;AAED,IAAM,oBAAoB,GAAG,SAAvB,oBAAoB,CAAI,OAAO,EAAE,MAAM,EAAE,EAAE,EAAK;AACpD,MAAI,UAAU,GAAG,GAAG,CAAC,UAAC,CAAC,EAAK;AAC1B,WAAO,GAAG,CAAC,OAAO,EAAE,MAAM,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC,CAAA;GACxC,EAAE,MAAM,CAAC,KAAK,CAAC,CAAA;;AAEhB,SAAO,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,UAAC,OAAO,EAAK;AAC/C,WAAO,YAAY,CAAC,KAAK,CAAC,MAAM,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC,CAAA;GACvD,CAAC,CAAA;CACH,CAAA;;AAED,IAAM,kBAAkB,GAAG,SAArB,kBAAkB,CAAI,OAAO,EAAE,MAAM,EAAK;AAC9C,SAAO,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAA;CACpC,CAAA;;AAED,IAAM,cAAc,GAAG;AACrB,YAAU,EAAE,kBAAkB;AAC9B,aAAW,EAAE,kBAAkB;AAC/B,cAAY,EAAE,kBAAkB;AAChC,KAAG,EAAE,kBAAkB;AACvB,MAAI,EAAE,iBAAiB;AACvB,SAAO,EAAE,oBAAoB;AAC7B,OAAK,EAAE,kBAAkB;CAC1B,CAAA;;AAED,IAAM,mBAAmB,GAAG,SAAtB,mBAAmB,CAAI,MAAM,EAAE,YAAY,EAAK;AACpD,SAAO,SAAS,CAAC,YAAY,CAAC,CAC7B,IAAI,CAAC,UAAC,OAAO,EAAK;AACjB,WAAO,YAAY,CAAC,KAAK,CAAC,MAAM,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC,CAAA;GACvD,CAAC,CACD,KAAK,CAAC,UAAC,KAAK,EAAK;AAChB,WAAO,WAAW,CAAC,KAAK,CAAC,MAAM,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC,CAAA;GACpD,CAAC,CAAA;CACH,CAAA;;AAED,IAAM,gBAAgB,GAAG,SAAnB,gBAAgB,CAAI,gBAAgB,EAAK;AAC7C,SAAO,KAAK,CAAC,gBAAgB,EAAE;AAC7B,SAAK,EAAE,gBAAgB,CAAC,KAAK,GAAG,CAAC;GAClC,CAAC,CAAA;CACH,CAAA;;AAED,IAAM,WAAW,GAAG,SAAd,WAAW,CAAI,IAAI,EAAE,EAAE,EAAK;AAChC,SAAO,EAAE,CAAC,KAAK,IAAI,IAAI,CAAC,MAAM,CAAA;CAC/B,CAAA;;AAED,IAAM,MAAM,GAAG,SAAT,MAAM,CAAI,IAAI,EAAE,EAAE,EAAK;AAC3B,SAAO,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,CAAA;CACtB,CAAA;;AAED,IAAM,cAAc,GAAG,SAAjB,cAAc,CAAI,KAAK,EAAK;AAChC,MAAI,CAAC,KAAK,EAAE;AACV,WAAO,UAAU,EAAE,CAAA;GACpB;;AAED,MAAI,KAAK,CAAC,OAAO,IAAI,KAAK,CAAC,MAAM,IAAI,KAAK,CAAC,OAAO,EAAE;AAClD,WAAO,KAAK,CAAA;GACb;;AAED,SAAO,KAAK,CAAC,UAAU,EAAE,EAAE;AACzB,WAAO,EAAE,KAAK;GACf,CAAC,CAAA;CACH,CAAA;;AAED,IAAM,aAAa,GAAG,SAAhB,aAAa,CAAI,IAAI,EAAK;AAC9B,MAAI,WAAW,GAAG,OAAO,CAAC,IAAI,CAAC,CAAA;AAC/B,SAAO,OAAO,CAAC,WAAW,CAAC,CAAA;CAC5B,CAAA;;AAED,IAAM,UAAU,GAAG,SAAb,UAAU,GAAS;AACvB,SAAO;AACL,WAAO,EAAE,EAAE;AACX,WAAO,EAAE,EAAE;AACX,UAAM,EAAE,EAAE;GACX,CAAA;CACF,CAAA;;AAED,IAAM,KAAK,GAAG,SAAR,KAAK,CAAI,OAAO,EAAE,KAAK,EAAK;AAChC,MAAI,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC,CAAA;AAC1B,SAAO,MAAM,CAAC,UAAC,CAAC,SAAkB;;;QAAf,GAAG;QAAE,IAAI;;AAC1B,KAAC,CAAC,GAAG,CAAC,GAAG,YAAgB;UAAf,KAAK,uEAAG,EAAE;;AAClB,aAAO,GAAG,CAAC,OAAO,EAAE,IAAI,EAAE,KAAK,CAAC,CAAA;KACjC,CAAA;AACD,WAAO,CAAC,CAAA;GACT,EAAE,EAAE,EAAE,KAAK,CAAC,CAAA;CACd,CAAA;;AAED,IAAM,YAAY,GAAG,SAAf,YAAY,CAAI,EAAE,EAAK;AAC3B,SAAO,UAAU,OAAO,EAAE,MAAM,EAAE;AAChC,QAAI,MAAM,GAAG,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,CAAA;AAC/B,WAAO,mBAAmB,CAAC,MAAM,EAAE,MAAM,CAAC,CAAA;GAC3C,CAAA;CACF,CAAA;;AAED,MAAM,CAAC,OAAO,GAAG;AACf,YAAU,EAAV,UAAU;AACV,KAAG,EAAH,GAAG;AACH,eAAa,EAAb,aAAa;AACb,gBAAc,EAAd,cAAc;AACd,OAAK,EAAL,KAAK;AACL,cAAY,EAAZ,YAAY;CACb,CAAA","file":"effects-as-data.js","sourcesContent":["const { map, merge, flatten, reduce, toPairs } = require('ramda')\nconst { toArray, toPromise, keyed } = require('./util')\nconst { stateReducer } = require('./state-reducer')\nconst { addToContext, addToErrors } = require('./actions')\n\nconst run = (plugins, pipeRaw, state, parentEC) => {\n  let ec = newExecutionContext(parentEC)\n  const allPlugins = merge(defaultPlugins, plugins)\n  return runRecursive(allPlugins, pipeRaw, state, ec)\n}\n\nconst runRecursive = (plugins, pipe, state, ec) => {\n  let state1 = normalizeState(state)\n  let pipe1 = normalizePipe(pipe)\n\n  if (isEndOfPipe(pipe1, ec)) {\n    return Promise.resolve(state1)\n  }\n\n  let fn = pipeFn(pipe1, ec)\n  let result = fn(state1)\n  let results = toArray(result)\n\n  return runActions(plugins, results, ec).then((actions) => {\n    let state2 = stateReducer(state1, actions)\n    let ec1 = incrementECIndex(ec)\n    let controlFlowAction = findControlFlowAction(actions)\n    let ec2 = applyControlFlowAction(controlFlowAction, ec1)\n\n    if (ec2.end) {\n      return state2\n    }\n\n    return runRecursive(plugins, pipe1, state2, ec2)\n  })\n}\n\nconst findControlFlowAction = (actions) => {\n  let controlFlowActionTypes = ['end']\n  return actions.find(({type}) => controlFlowActionTypes.indexOf(type) > -1)\n}\n\nconst applyControlFlowAction = (action = {}, ec) => {\n  switch (action.type) {\n    case 'end':\n      return merge(ec, {\n        end: true\n      })\n\n    default:\n      return ec\n  }\n}\n\nconst newExecutionContext = (parent) => {\n  return {\n    index: 0,\n    parent\n  }\n}\n\nconst runActions = (plugins, actions, ec) => {\n  let promises = map((action) => {\n    return plugins[action.type](plugins, action, ec)\n  }, actions)\n  return Promise.all(promises)\n}\n\nconst stateActionHandler = (plugins, action) => {\n  return action\n}\n\nconst callActionHandler = (plugins, action, ec) => {\n  return run(plugins, action.pipe, action.state, ec).then((state) => {\n    return addToContext(keyed(action.contextKey, state))\n  })\n}\n\nconst mapPipeActionHandler = (plugins, action, ec) => {\n  let mapResults = map((s) => {\n    return run(plugins, action.pipe, s, ec)\n  }, action.state)\n\n  return Promise.all(mapResults).then((results) => {\n    return addToContext(keyed(action.contextKey, results))\n  })\n}\n\nconst panicActionHandler = (plugins, action) => {\n  return Promise.reject(action.error)\n}\n\nconst defaultPlugins = {\n  setPayload: stateActionHandler,\n  addToErrors: stateActionHandler,\n  addToContext: stateActionHandler,\n  end: stateActionHandler,\n  call: callActionHandler,\n  mapPipe: mapPipeActionHandler,\n  panic: panicActionHandler\n}\n\nconst resultToStateAction = (action, pluginResult) => {\n  return toPromise(pluginResult)\n  .then((payload) => {\n    return addToContext(keyed(action.contextKey, payload))\n  })\n  .catch((error) => {\n    return addToErrors(keyed(action.contextKey, error))\n  })\n}\n\nconst incrementECIndex = (executionContext) => {\n  return merge(executionContext, {\n    index: executionContext.index + 1\n  })\n}\n\nconst isEndOfPipe = (pipe, ec) => {\n  return ec.index >= pipe.length\n}\n\nconst pipeFn = (pipe, ec) => {\n  return pipe[ec.index]\n}\n\nconst normalizeState = (state) => {\n  if (!state) {\n    return emptyState()\n  }\n\n  if (state.context && state.errors && state.payload) {\n    return state\n  }\n\n  return merge(emptyState(), {\n    payload: state\n  })\n}\n\nconst normalizePipe = (pipe) => {\n  let pipeAsArray = toArray(pipe)\n  return flatten(pipeAsArray)\n}\n\nconst emptyState = () => {\n  return {\n    context: {},\n    payload: {},\n    errors: {}\n  }\n}\n\nconst setup = (plugins, pipes) => {\n  let pairs = toPairs(pipes)\n  return reduce((p, [key, pipe]) => {\n    p[key] = (state = {}) => {\n      return run(plugins, pipe, state)\n    }\n    return p\n  }, {}, pairs)\n}\n\nconst simplePlugin = (fn) => {\n  return function (plugins, action) {\n    let result = fn(action.payload)\n    return resultToStateAction(action, result)\n  }\n}\n\nmodule.exports = {\n  emptyState,\n  run,\n  normalizePipe,\n  normalizeState,\n  setup,\n  simplePlugin\n}\n"]}