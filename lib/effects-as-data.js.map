{"version":3,"sources":["../src/effects-as-data.js"],"names":[],"mappings":";;;;eAAyD,OAAO,CAAC,OAAO,CAAC;;IAAjE,GAAG,YAAH,GAAG;IAAE,MAAM,YAAN,MAAM;IAAE,KAAK,YAAL,KAAK;IAAE,OAAO,YAAP,OAAO;IAAE,MAAM,YAAN,MAAM;IAAE,OAAO,YAAP,OAAO;;gBACd,OAAO,CAAC,QAAQ,CAAC;;IAA/C,OAAO,aAAP,OAAO;IAAE,SAAS,aAAT,SAAS;IAAE,KAAK,aAAL,KAAK;;gBACR,OAAO,CAAC,iBAAiB,CAAC;;IAA3C,YAAY,aAAZ,YAAY;;gBACkB,OAAO,CAAC,WAAW,CAAC;;IAAlD,YAAY,aAAZ,YAAY;IAAE,WAAW,aAAX,WAAW;;gBACL,OAAO,CAAC,6BAA6B,CAAC;;IAA1D,eAAe,aAAf,eAAe;;gBACK,OAAO,CAAC,6BAA6B,CAAC;;IAA1D,eAAe,aAAf,eAAe;;gBACI,OAAO,CAAC,4BAA4B,CAAC;;IAAxD,cAAc,aAAd,cAAc;;gBACa,OAAO,CAAC,sCAAsC,CAAC;;IAA1E,sBAAsB,aAAtB,sBAAsB;;gBACN,OAAO,CAAC,wBAAwB,CAAC;;IAAjD,WAAW,aAAX,WAAW;;iBACK,OAAO,CAAC,wBAAwB,CAAC;;IAAjD,WAAW,cAAX,WAAW;;iBACI,OAAO,CAAC,uBAAuB,CAAC;;IAA/C,UAAU,cAAV,UAAU;;iBACS,OAAO,CAAC,2BAA2B,CAAC;;IAAvD,cAAc,cAAd,cAAc;;iBACG,OAAO,CAAC,0BAA0B,CAAC;;IAApD,YAAY,cAAZ,YAAY;;AACpB,IAAM,OAAO,GAAG,OAAO,CAAC,WAAW,CAAC,CAAA;;AAEpC,IAAM,GAAG,GAAG,SAAN,GAAG,CAAI,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,QAAQ,EAAK;AACjD,MAAI,IAAI,GAAG,aAAa,CAAC,OAAO,CAAC,CAAA;AACjC,MAAI,EAAE,GAAG,mBAAmB,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAA;AAC5C,MAAI,MAAM,GAAG,cAAc,CAAC,KAAK,CAAC,CAAA;AAClC,MAAM,UAAU,GAAG,KAAK,CAAC,cAAc,EAAE,OAAO,CAAC,CAAA;AACjD,SAAO,YAAY,CAAC,UAAU,EAAE,MAAM,EAAE,EAAE,CAAC,CAAA;CAC5C,CAAA;;AAED,IAAM,YAAY,GAAG,SAAf,YAAY,CAAI,OAAO,EAAE,KAAK,EAAE,EAAE,EAAK;AAC3C,MAAI,WAAW,CAAC,EAAE,CAAC,EAAE;AACnB,WAAO,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAA;GAC9B;;AAED,MAAI,EAAE,GAAG,MAAM,CAAC,EAAE,CAAC,CAAA;AACnB,MAAI,MAAM,GAAG,EAAE,CAAC,KAAK,CAAC,CAAA;AACtB,MAAI,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC,CAAA;;AAE7B,SAAO,UAAU,CAAC,OAAO,EAAE,OAAO,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,UAAC,OAAO,EAAK;AACxD,QAAI,MAAM,GAAG,YAAY,CAAC,KAAK,EAAE,OAAO,CAAC,CAAA;AACzC,QAAI,GAAG,GAAG,gBAAgB,CAAC,EAAE,CAAC,CAAA;AAC9B,QAAI,iBAAiB,GAAG,qBAAqB,CAAC,OAAO,CAAC,CAAA;AACtD,QAAI,GAAG,GAAG,sBAAsB,CAAC,iBAAiB,EAAE,GAAG,CAAC,CAAA;;AAExD,QAAI,GAAG,CAAC,IAAI,KAAK,KAAK,EAAE;AACtB,aAAO,MAAM,CAAA;KACd;;AAED,WAAO,YAAY,CAAC,OAAO,EAAE,MAAM,EAAE,GAAG,CAAC,CAAA;GAC1C,CAAC,CAAA;CACH,CAAA;;AAED,IAAM,qBAAqB,GAAG,SAAxB,qBAAqB,CAAI,OAAO,EAAK;AACzC,MAAI,sBAAsB,GAAG,CAAC,KAAK,EAAE,aAAa,CAAC,CAAA;AACnD,SAAO,OAAO,CAAC,IAAI,CAAC;QAAE,IAAI,QAAJ,IAAI;WAAM,sBAAsB,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;GAAA,CAAC,CAAA;CAC3E,CAAA;;AAED,IAAM,sBAAsB,GAAG,SAAzB,sBAAsB,GAAwB;MAApB,MAAM,uEAAG,EAAE;MAAE,EAAE;;AAC7C,UAAQ,MAAM,CAAC,IAAI;AACjB,SAAK,KAAK;AACR,aAAO,KAAK,CAAC,EAAE,EAAE;AACf,YAAI,EAAE,KAAK;OACZ,CAAC,CAAA;;AAAA,AAEJ,SAAK,aAAa;AAChB,UAAI,OAAO,GAAG,MAAM,CAAC,EAAE,CAAC,KAAK,EAAE,MAAM,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,CAAA;AACpD,aAAO,UAAU,CAAC,EAAE,EAAE,OAAO,CAAC,OAAO,CAAC,CAAC,CAAA;;AAAA,AAEzC;AACE,aAAO,KAAK,CAAC,EAAE,EAAE;AACf,YAAI,EAAE,UAAU;OACjB,CAAC,CAAA;AAAA,GACL;CACF,CAAA;;AAED,IAAM,mBAAmB,GAAG,SAAtB,mBAAmB,CAAI,IAAI,EAAE,MAAM,EAAK;AAC5C,SAAO;AACL,SAAK,EAAE,CAAC;AACR,UAAM,EAAN,MAAM;AACN,QAAI,EAAJ,IAAI;GACL,CAAA;CACF,CAAA;;AAED,IAAM,gBAAgB,GAAG,SAAnB,gBAAgB,CAAI,EAAE,EAAK;AAC/B,SAAO,KAAK,CAAC,EAAE,EAAE;AACf,SAAK,EAAE,EAAE,CAAC,KAAK,GAAG,CAAC;GACpB,CAAC,CAAA;CACH,CAAA;;AAED,IAAM,UAAU,GAAG,SAAb,UAAU,CAAI,EAAE,EAAE,IAAI,EAAK;AAC/B,SAAO,KAAK,CAAC,EAAE,EAAE;AACf,gBAAY,EAAE,EAAE,CAAC,IAAI;AACrB,QAAI,EAAJ,IAAI;GACL,CAAC,CAAA;CACH,CAAA;;AAED,IAAM,UAAU,GAAG,SAAb,UAAU,CAAI,OAAO,EAAE,OAAO,EAAE,EAAE,EAAK;AAC3C,MAAI,QAAQ,GAAG,GAAG,CAAC,UAAC,MAAM,EAAK;AAC7B,WAAO,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE,CAAC,CAAA;GACjD,EAAE,OAAO,CAAC,CAAA;AACX,SAAO,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAA;CAC7B,CAAA;;AAED,IAAM,kBAAkB,GAAG,SAArB,kBAAkB,CAAI,OAAO,EAAE,MAAM,EAAK;AAC9C,SAAO,MAAM,CAAA;CACd,CAAA;;AAED,IAAM,iBAAiB,GAAG,SAApB,iBAAiB,CAAI,OAAO,EAAE,MAAM,EAAE,EAAE,EAAK;AACjD,SAAO,GAAG,CAAC,OAAO,EAAE,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,IAAI,CAAC,UAAC,KAAK,EAAK;AACjE,WAAO,YAAY,CAAC,KAAK,CAAC,MAAM,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC,CAAA;GACrD,CAAC,CAAA;CACH,CAAA;;AAED,IAAM,oBAAoB,GAAG,SAAvB,oBAAoB,CAAI,OAAO,EAAE,MAAM,EAAE,EAAE,EAAK;AACpD,MAAI,UAAU,GAAG,GAAG,CAAC,UAAC,CAAC,EAAK;AAC1B,WAAO,GAAG,CAAC,OAAO,EAAE,MAAM,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC,CAAA;GACxC,EAAE,MAAM,CAAC,KAAK,CAAC,CAAA;;AAEhB,SAAO,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,UAAC,OAAO,EAAK;AAC/C,WAAO,YAAY,CAAC,KAAK,CAAC,MAAM,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC,CAAA;GACvD,CAAC,CAAA;CACH,CAAA;;AAED,IAAM,kBAAkB,GAAG,SAArB,kBAAkB,CAAI,OAAO,EAAE,MAAM,EAAK;AAC9C,SAAO,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAA;CACpC,CAAA;;AAED,IAAM,cAAc,GAAG;AACrB,YAAU,EAAE,kBAAkB;AAC9B,aAAW,EAAE,kBAAkB;AAC/B,cAAY,EAAE,kBAAkB;AAChC,KAAG,EAAE,kBAAkB;AACvB,MAAI,EAAE,iBAAiB;AACvB,SAAO,EAAE,oBAAoB;AAC7B,OAAK,EAAE,kBAAkB;AACzB,aAAW,EAAE,kBAAkB;CAChC,CAAA;;AAED,IAAM,mBAAmB,GAAG,SAAtB,mBAAmB,CAAI,MAAM,EAAE,YAAY,EAAK;AACpD,SAAO,SAAS,CAAC,YAAY,CAAC,CAC7B,IAAI,CAAC,UAAC,OAAO,EAAK;AACjB,WAAO,YAAY,CAAC,KAAK,CAAC,MAAM,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC,CAAA;GACvD,CAAC,CACD,KAAK,CAAC,UAAC,KAAK,EAAK;AAChB,WAAO,WAAW,CAAC,KAAK,CAAC,MAAM,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC,CAAA;GACpD,CAAC,CAAA;CACH,CAAA;;AAED,IAAM,WAAW,GAAG,SAAd,WAAW,CAAI,EAAE,EAAK;AAC1B,SAAO,EAAE,CAAC,KAAK,IAAI,EAAE,CAAC,IAAI,CAAC,MAAM,CAAA;CAClC,CAAA;;AAED,IAAM,MAAM,GAAG,SAAT,MAAM,CAAI,EAAE,EAAK;AACrB,SAAO,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,CAAA;CACzB,CAAA;;AAED,IAAM,cAAc,GAAG,SAAjB,cAAc,CAAI,KAAK,EAAK;AAChC,MAAI,CAAC,KAAK,EAAE;AACV,WAAO,UAAU,EAAE,CAAA;GACpB;;AAED,MAAI,KAAK,CAAC,OAAO,IAAI,KAAK,CAAC,MAAM,IAAI,KAAK,CAAC,OAAO,EAAE;AAClD,WAAO,KAAK,CAAA;GACb;;AAED,SAAO,KAAK,CAAC,UAAU,EAAE,EAAE;AACzB,WAAO,EAAE,KAAK;GACf,CAAC,CAAA;CACH,CAAA;;AAED,IAAM,aAAa,GAAG,SAAhB,aAAa,CAAI,IAAI,EAAK;AAC9B,MAAI,WAAW,GAAG,OAAO,CAAC,IAAI,CAAC,CAAA;AAC/B,SAAO,OAAO,CAAC,WAAW,CAAC,CAAA;CAC5B,CAAA;;AAED,IAAM,UAAU,GAAG,SAAb,UAAU,GAAS;AACvB,SAAO;AACL,WAAO,EAAE,EAAE;AACX,WAAO,EAAE,EAAE;AACX,UAAM,EAAE,EAAE;GACX,CAAA;CACF,CAAA;;AAED,IAAM,KAAK,GAAG,SAAR,KAAK,CAAI,OAAO,EAAE,KAAK,EAAK;AAChC,MAAI,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC,CAAA;AAC1B,SAAO,MAAM,CAAC,UAAC,CAAC,SAAkB;;;QAAf,GAAG;QAAE,IAAI;;AAC1B,KAAC,CAAC,GAAG,CAAC,GAAG,YAAgB;UAAf,KAAK,uEAAG,EAAE;;AAClB,aAAO,GAAG,CAAC,OAAO,EAAE,IAAI,EAAE,KAAK,CAAC,CAAA;KACjC,CAAA;AACD,WAAO,CAAC,CAAA;GACT,EAAE,EAAE,EAAE,KAAK,CAAC,CAAA;CACd,CAAA;;AAED,IAAM,YAAY,GAAG,SAAf,YAAY,CAAI,EAAE,EAAK;AAC3B,SAAO,UAAU,OAAO,EAAE,MAAM,EAAE;AAChC,QAAI,MAAM,GAAG,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC,CAAA;AAC/B,WAAO,mBAAmB,CAAC,MAAM,EAAE,MAAM,CAAC,CAAA;GAC3C,CAAA;CACF,CAAA;;AAED,IAAM,QAAQ,GAAG;AACf,YAAU,EAAV,UAAU;AACV,KAAG,EAAH,GAAG;AACH,eAAa,EAAb,aAAa;AACb,gBAAc,EAAd,cAAc;AACd,OAAK,EAAL,KAAK;AACL,cAAY,EAAZ,YAAY;AACZ,iBAAe,EAAf,eAAe;AACf,iBAAe,EAAf,eAAe;AACf,gBAAc,EAAd,cAAc;AACd,wBAAsB,EAAtB,sBAAsB;AACtB,aAAW,EAAX,WAAW;AACX,aAAW,EAAX,WAAW;AACX,YAAU,EAAV,UAAU;AACV,gBAAc,EAAd,cAAc;AACd,cAAY,EAAZ,YAAY;CACb,CAAA;;AAED,MAAM,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAA","file":"effects-as-data.js","sourcesContent":["const { map, insert, merge, flatten, reduce, toPairs } = require('ramda')\nconst { toArray, toPromise, keyed } = require('./util')\nconst { stateReducer } = require('./state-reducer')\nconst { addToContext, addToErrors } = require('./actions')\nconst { resultToContext } = require('./helpers/result-to-context')\nconst { resultToPayload } = require('./helpers/result-to-payload')\nconst { endWithPayload } = require('./helpers/end-with-payload')\nconst { endWithPayloadIfTruthy } = require('./helpers/end-with-payload-if-truthy')\nconst { pickPayload } = require('./helpers/pick-payload')\nconst { pickContext } = require('./helpers/pick-context')\nconst { pickErrors } = require('./helpers/pick-errors')\nconst { validateExists } = require('./helpers/validate-exists')\nconst { panicIfError } = require('./helpers/panic-if-error')\nconst actions = require('./actions')\n\nconst run = (plugins, pipeRaw, state, parentEC) => {\n  let pipe = normalizePipe(pipeRaw)\n  let ec = newExecutionContext(pipe, parentEC)\n  let state1 = normalizeState(state)\n  const allPlugins = merge(defaultPlugins, plugins)\n  return runRecursive(allPlugins, state1, ec)\n}\n\nconst runRecursive = (plugins, state, ec) => {\n  if (isEndOfPipe(ec)) {\n    return Promise.resolve(state)\n  }\n\n  let fn = pipeFn(ec)\n  let result = fn(state)\n  let results = toArray(result)\n\n  return runActions(plugins, results, ec).then((actions) => {\n    let state1 = stateReducer(state, actions)\n    let ec1 = incrementECIndex(ec)\n    let controlFlowAction = findControlFlowAction(actions)\n    let ec2 = applyControlFlowAction(controlFlowAction, ec1)\n\n    if (ec2.flow === 'end') {\n      return state1\n    }\n\n    return runRecursive(plugins, state1, ec2)\n  })\n}\n\nconst findControlFlowAction = (actions) => {\n  let controlFlowActionTypes = ['end', 'interpolate']\n  return actions.find(({type}) => controlFlowActionTypes.indexOf(type) > -1)\n}\n\nconst applyControlFlowAction = (action = {}, ec) => {\n  switch (action.type) {\n    case 'end':\n      return merge(ec, {\n        flow: 'end'\n      })\n\n    case 'interpolate':\n      let newPipe = insert(ec.index, action.pipe, ec.pipe)\n      return modifyPipe(ec, flatten(newPipe))\n\n    default:\n      return merge(ec, {\n        flow: 'continue'\n      })\n  }\n}\n\nconst newExecutionContext = (pipe, parent) => {\n  return {\n    index: 0,\n    parent,\n    pipe\n  }\n}\n\nconst incrementECIndex = (ec) => {\n  return merge(ec, {\n    index: ec.index + 1\n  })\n}\n\nconst modifyPipe = (ec, pipe) => {\n  return merge(ec, {\n    originalPipe: ec.pipe,\n    pipe\n  })\n}\n\nconst runActions = (plugins, actions, ec) => {\n  let promises = map((action) => {\n    return plugins[action.type](plugins, action, ec)\n  }, actions)\n  return Promise.all(promises)\n}\n\nconst stateActionHandler = (plugins, action) => {\n  return action\n}\n\nconst callActionHandler = (plugins, action, ec) => {\n  return run(plugins, action.pipe, action.state, ec).then((state) => {\n    return addToContext(keyed(action.contextKey, state))\n  })\n}\n\nconst mapPipeActionHandler = (plugins, action, ec) => {\n  let mapResults = map((s) => {\n    return run(plugins, action.pipe, s, ec)\n  }, action.state)\n\n  return Promise.all(mapResults).then((results) => {\n    return addToContext(keyed(action.contextKey, results))\n  })\n}\n\nconst panicActionHandler = (plugins, action) => {\n  return Promise.reject(action.error)\n}\n\nconst defaultPlugins = {\n  setPayload: stateActionHandler,\n  addToErrors: stateActionHandler,\n  addToContext: stateActionHandler,\n  end: stateActionHandler,\n  call: callActionHandler,\n  mapPipe: mapPipeActionHandler,\n  panic: panicActionHandler,\n  interpolate: stateActionHandler\n}\n\nconst resultToStateAction = (action, pluginResult) => {\n  return toPromise(pluginResult)\n  .then((payload) => {\n    return addToContext(keyed(action.contextKey, payload))\n  })\n  .catch((error) => {\n    return addToErrors(keyed(action.contextKey, error))\n  })\n}\n\nconst isEndOfPipe = (ec) => {\n  return ec.index >= ec.pipe.length\n}\n\nconst pipeFn = (ec) => {\n  return ec.pipe[ec.index]\n}\n\nconst normalizeState = (state) => {\n  if (!state) {\n    return emptyState()\n  }\n\n  if (state.context && state.errors && state.payload) {\n    return state\n  }\n\n  return merge(emptyState(), {\n    payload: state\n  })\n}\n\nconst normalizePipe = (pipe) => {\n  let pipeAsArray = toArray(pipe)\n  return flatten(pipeAsArray)\n}\n\nconst emptyState = () => {\n  return {\n    context: {},\n    payload: {},\n    errors: {}\n  }\n}\n\nconst setup = (plugins, pipes) => {\n  let pairs = toPairs(pipes)\n  return reduce((p, [key, pipe]) => {\n    p[key] = (state = {}) => {\n      return run(plugins, pipe, state)\n    }\n    return p\n  }, {}, pairs)\n}\n\nconst simplePlugin = (fn) => {\n  return function (plugins, action) {\n    let result = fn(action.payload)\n    return resultToStateAction(action, result)\n  }\n}\n\nconst exported = {\n  emptyState,\n  run,\n  normalizePipe,\n  normalizeState,\n  setup,\n  simplePlugin,\n  resultToContext,\n  resultToPayload,\n  endWithPayload,\n  endWithPayloadIfTruthy,\n  pickPayload,\n  pickContext,\n  pickErrors,\n  validateExists,\n  panicIfError\n}\n\nmodule.exports = merge(actions, exported)\n"]}